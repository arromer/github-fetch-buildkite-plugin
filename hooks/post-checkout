#!/usr/bin/env bash

set -euo pipefail

get_changed_attr_file() {
    git diff --name-only "$( git merge-base master HEAD )" | grep .gitattributes
}

check_lfs_integrity_at() {
    files="$( git ls-files $1 )"

    while read -r f; do
        local err
        err=false

        if [[ -n "$( git check-attr filter $f | grep "filter: lfs" )" ]]; then
            git cat-file blob "HEAD:$f" 2>1 | git lfs pointer --stdin --file=$f 2>1 > /dev/null || { err=true; false; }
        fi

        if [[ ${err} == true ]]; then
            echo $f
        fi
    done<<< "${files}"
    set -e
}

is_array() {
    local variable_name=$1
    [[ "$(declare -p $variable_name 2>/dev/null)" =~ "declare -a" ]]
}

main() {
    cd "$1"
    local attr_files="$(get_changed_attr_file)"

    while read -r attr_file; do
        local attr_file_path="$(dirname ${attr_file})"
        local rtn=$(check_lfs_integrity_at "${attr_file_path}")
        if [[ -n "${rtn}" ]]; then 
            while read -r broken_file; do
                echo "${broken_file}"
            done<<< "${rtn}"

            exit 1
        fi
    done<<< "${attr_files}"
}

main "$@" #"web/src/services/media/fake/"