#!/usr/bin/env bash

set -eu

# Checks if an env var is set
# Arguments:
# $1: var name
check_set() {
  local name="$1"
  if [[ -z "${!name:-}" ]]; then
    echo "ERROR: ${name} not set"
    exit 1
  fi
}

checkout() {
  git clean -ffxdq
  git fetch -v origin HEAD
  git config remote.origin.fetch
  git fetch -v --prune origin "${BUILDKITE_BRANCH}"
  git checkout -f "${BUILDKITE_COMMIT}"
}

clean_checkout_dir() {
  rm -rf "${BUILDKITE_BUILD_CHECKOUT_PATH}"
  mkdir -p "${BUILDKITE_BUILD_CHECKOUT_PATH}"
  cd "${BUILDKITE_BUILD_CHECKOUT_PATH}"
}

clone() {
  # git clone needs an empty directory
  clean_checkout_dir
  git clone "${BUILDKITE_REPO}" .
}

main() {
  check_set BUILDKITE_REPO
  check_set BUILDKITE_BRANCH
  check_set BUILDKITE_COMMIT
  check_set BUILDKITE_BUILD_CHECKOUT_PATH

  local checkout_status=0
  checkout || checkout_status=$?

  if [[ "${checkout_status}" -ne 0 ]]; then
    echo "checkout failed"
    # if checkout fails, then clone and try checkout again
    # if checkout fails again after clone, fail the script
    clone
    checkout
  fi
}

main "$@"
