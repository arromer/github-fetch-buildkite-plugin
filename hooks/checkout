#!/usr/bin/env bash

set -eu

# Checks if an env var is set
# Arguments:
# $1: var name
check_set() {
  local name="$1"
  if [[ -z "${!name:-}" ]]; then
    echo "ERROR: ${name} not set"
    exit 1
  fi
}

copy_checkout_from_s3() {
  local s3_url="$1"

  clean_checkout_dir

  local checkout

  # find most recent checkout
  checkout=$(aws s3 ls "${s3_url}/" \
      | (sort -r -k 4 || true) \
      | head -n1 \
      | awk '{print $4}'
  )
  pushd .. >/dev/null
  trap "rm ${PWD}/${checkout}" EXIT
  aws s3 cp "${s3_url}/${checkout}" "${PWD}/${checkout}"
  tar -zxf "${PWD}/${checkout}"
  popd >/dev/null
}

checkout() {
  git reset --hard
  git clean -ffxdq
  git fetch -v origin HEAD
  git config remote.origin.fetch
  git fetch -v --prune origin "${BUILDKITE_BRANCH}"
  if [[ -z "${BUILDKITE_COMMIT:-}" || "${BUILDKITE_COMMIT}" == "HEAD" ]]; then
    git checkout -f FETCH_HEAD
  else
    git checkout -f "${BUILDKITE_COMMIT}"
  fi
}

clean_checkout_dir() {
  rm -rf "${BUILDKITE_BUILD_CHECKOUT_PATH}"
  mkdir -p "${BUILDKITE_BUILD_CHECKOUT_PATH}"
  cd "${BUILDKITE_BUILD_CHECKOUT_PATH}"
}

clone() {
  # git clone needs an empty directory
  clean_checkout_dir
  git clone "${BUILDKITE_REPO}" .
}

setup_git_lfs() {
  if [[ "${BUILDKITE_REPO}" =~ .*github\.com.* ]]; then
    # Workaround for GitHub git-lfs API rate limit error:
    # https://github.com/git-lfs/git-lfs/issues/2133#issuecomment-292557138
    git config "lfs.https://github.com/${BUILDKITE_REPO#git@github.com:}/info/lfs.access" basic
  fi
}

main() {
  check_set BUILDKITE_REPO
  check_set BUILDKITE_BRANCH
  check_set BUILDKITE_COMMIT
  check_set BUILDKITE_BUILD_CHECKOUT_PATH

  local git_lfs_skip_smudge_was_set=true
  (env | grep --quiet GIT_LFS_SKIP_SMUDGE=) || git_lfs_skip_smudge_was_set=false
  local old_git_lfs_skip_smudge="${GIT_LFS_SKIP_SMUDGE:-}"

  if ! command -v git-lfs; then
    export GIT_LFS_SKIP_SMUDGE=1
    echo >&2 "git-lfs not installed, skipping lfs"
  fi
  # If the lock file exists it's probably because a previous job was killed while checking out the
  # repo, in which case it might be corrupted.
  if [[ "$(git rev-parse --is-inside-work-tree 2>/dev/null)" != "true" || -f ".git/index.lock" ]]; then
    if [[ -n "${BUILDKITE_PLUGIN_GITHUB_FETCH_S3_URL:-}" ]]; then
      copy_checkout_from_s3 "${BUILDKITE_PLUGIN_GITHUB_FETCH_S3_URL}"
    else
      clone
    fi
  fi
  if command -v git-lfs; then
    setup_git_lfs
  fi
  checkout

  if [[ "${git_lfs_skip_smudge_was_set}" == "true" ]]; then
    export GIT_LFS_SKIP_SMUDGE="${old_git_lfs_skip_smudge}"
  else
    unset GIT_LFS_SKIP_SMUDGE
  fi
}

main "$@"
